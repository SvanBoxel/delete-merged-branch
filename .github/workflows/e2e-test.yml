# This is a basic workflow to help you get started with Actions

name: Test bot e2e

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  workflow_dispatch:
  
env:
  owner: 'SvanBoxel'
  repo: 'delete-test'
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test-end-2-end-flow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2.3.2
      with:
        # Repository name with owner. For example, actions/checkout
        repository: ${{ env.owner }}/${{ env.repo }}
        token: ${{ secrets.DELETE_TEST_REPO_PAT }}
        ref: 'master'
    - name: Create commit
      run: |
        SHA='${{ github.sha }}'
        SHORT_SHA=${SHA: -7}
        git config --global user.email "actions-bot@example.com"
        git config --global user.name "Actions bot delete merged branch"
        git checkout -b $SHORT_SHA
        echo '${{ github.sha }}' >> README.md
        git add .
        git commit -m "Testing delete-merged-branch bot sha ${{ github.sha }}"
        git push -u origin $SHORT_SHA
        echo "::set-env name=short_sha::$SHORT_SHA"
    - name: Create pull request
      uses: actions/github-script@v3
      with: 
        github-token: ${{ secrets.DELETE_TEST_REPO_PAT }}
        script: |
          const short_sha = '${{ env.short_sha }}';
         
          const pr = await github.pulls.create({
            owner: '${{ env.owner }}',
            repo: '${{ env.repo }}',
            title: `test pull request for ${short_sha}`,
            head: short_sha,
            base: 'master'
          });
          
          core.exportVariable('pull_number', pr.data.number);
    - name: Merge pull request
      uses: actions/github-script@v3
      with: 
        github-token: ${{ secrets.DELETE_TEST_REPO_PAT }}
        script: |
          const short_sha = '${{ env.short_sha }}';
         
          github.pulls.merge({
            owner: '${{ env.owner }}',
            repo: '${{ env.repo }}',
            pull_number: '${{ env.pull_number }}'
          });
    - name: Sleep for 5 seconds
      run: sleep 5s
    - name: Check if branch is deleted
      uses: actions/github-script@v3
      with: 
        github-token: ${{ secrets.DELETE_TEST_REPO_PAT }}
        script: |
          const short_sha = '${{ env.short_sha }}';

          const events = await github.issues.listEvents({
            owner: '${{ env.owner }}',
            repo: '${{ env.repo }}',
            issue_number: '${{ env.pull_number }}'
          });
          
          console.log(events)
